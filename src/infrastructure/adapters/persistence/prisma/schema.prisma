generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELLED
}

enum TransactionStatus {
  PENDING
  APPROVED
  DECLINED
  VOIDED
  ERROR
}

enum DeliveryStatus {
  PENDING
  IN_TRANSIT
  DELIVERED
  FAILED
}

model Products {
  id          String    @id @default(uuid())
  title       String 
  author      String
  description String?
  price       Decimal
  stock       Int
  image_url   String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  OrderItem   OrderItems[]
}

model Customer {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique    
  contactNumber String?
  address       String
  orders        Orders[]
  city          String
  department    String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  password      String?   
  isRegistered  Boolean   @default(false)
}

model Delivery {
  id              String         @id @default(uuid())
  orderId         String         @unique
  status          DeliveryStatus @default(PENDING)
  trackingNumber  String?
  carrier         String?
  address         String
  city            String
  department      String
  contactNumber   String
  recipientName   String
  estimatedDate   DateTime?
  actualDate      DateTime?
  notes           String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  order           Orders         @relation(fields: [orderId], references: [id])
}

model Orders {
  id            String      @id @default(uuid())
  totalAmount   Decimal
  baseAmount    Decimal
  deliveryFee   Decimal
  status        OrderStatus @default(PENDING)
  items         OrderItems[]
  customerId    String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  transaction   Transaction?
  delivery      Delivery?
  customer      Customer    @relation(fields: [customerId], references: [id])
}

model OrderItems {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Decimal
  order     Orders    @relation(fields: [orderId], references: [id])
  product   Products  @relation(fields: [productId], references: [id])
}

model Transaction {
  id                  String   @id @default(uuid())
  orderId             String   @unique
  amount              Decimal
  gatewayTransactionId String?
  status              TransactionStatus @default(PENDING)
  paymentMethod       String
  lastFourDigits      String?
  gatewayResponse     Json?
  errorMessage        String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  order               Orders    @relation(fields: [orderId], references: [id])
}